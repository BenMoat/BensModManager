@model PaginatedList<BensModManager.Models.Mod>

<div class="title-container text-center text-light">
    <h1 class="mods-header offcanvas-header text-light">Mods</h1>
</div>

<form asp-action="Index" method="get">
    <div id="inlineSearch" class="row">
        <div class="col">
            <input type="text"
                   for="ModName"
                   name="ModName"
                   id="searchModName"
                   class="form-control bg-dark text-light"
                   placeholder="Mod Name"
                   value="@ViewData["ModName"]" />
        </div>
        <div class="col">
            <select for="ModType"
                    id="searchModType"
                    name="ModType"
                    class="form-floating"
                    value="@ViewData["ModType"]">
            </select>
        </div>

        <div class="col-2">
            <button type="submit"
                    id="searchBtn"
                    class="form-control btn btn-success text-white"
                    value="Search">
                <i class="fas fa-search"></i>
            </button>
        </div>
        <div class="col-2">
            <a onclick="modPopup('@Url.Action("AddOrEdit","Mods",null,Context.Request.Scheme)','New Mod')"
               class="btn btn-success text-white">New Mod</a>
        </div>

        @if (@ViewData["ModName"] != null || @ViewData["ModType"] != null)
        {
            <div class="col">
                <a id="fullListBtn"
                   class="form-control btn btn-info text-white"
               asp-action="Index">
                    Back to Full List
                </a>
            </div>
        }
    </div>
</form>


<div id="tableAJAX">
    <table class="table table-dark table-striped table-hover">
        <thead>
            <tr id="headers" class="align-middle">
                <th scope="col" class="col-7">
                    Mod Name
                </th>
                <th scope="col" class="col-2">
                    Price
                </th>
                <th scope="col" class="col-3">
                    Mod Type
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr onclick="modPopup('@Url.Action("AddOrEdit","Mods",new {id=item.ID},Context.Request.Scheme)','Update Mod')"
                    class="focusAnchor">
                    <td>
                        @Html.DisplayFor(modelItem => item.ModName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ModType)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (!Model.Any())
{
    <h2 class="text-light">No Mods Found</h2>
}
else
{
    <h1 id="totalSum" class="text-light">Total: @string.Format(new System.Globalization.CultureInfo("en-GB"), "{0:C}", @Model.Sum(x => x.Price))</h1>
}

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="container align-middle text-center">
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["ModName"]"
       class="btn btn-default btn-outline-light @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["ModName"]"
       class="btn btn-default btn-outline-light @nextDisabled">
        Next
    </a>
</div>